@import url('https://fonts.googleapis.com/css2?family=Inter:wght@100,300,400;500;700;900&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
    body {
        font-family: 'Inter', sans-serif;
        background-color: #0A0A0A;
        color: #F3F4F6;
    }
}

@layer components {
    .hero-bg {
        background-color: #0A0A0A;
        background-image: radial-gradient(circle at top left, rgba(59, 130, 246, 0.1), transparent 30%), radial-gradient(circle at bottom right, rgba(59, 130, 246, 0.1), transparent 40%);
    }

    .number-animation {
        font-weight: 900;
        font-size: 6rem; /* 96px */
        line-height: 1;
    }

    .image-section {
        background-size: cover;
        background-position: center;
        position: relative;
        color: white;
    }
    .image-overlay::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(to right, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.1));
        z-index: 1;
    }
    .image-overlay.right::before {
         background: linear-gradient(to left, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.1));
    }
    .image-content {
        position: relative;
        z-index: 2;
    }
    
    @media (min-width: 768px) {
        .number-animation {
            font-size: 10rem; /* 160px */
        }
    }
}

/* Estilos para animação de scroll */
.reveal {
    opacity: 0;
    transform: translateY(30px);
    transition: opacity 0.8s cubic-bezier(0.6, 0.2, 0.4, 1), transform 0.8s cubic-bezier(0.6, 0.2, 0.4, 1);
}
.reveal.visible {
    opacity: 1;
    transform: translateY(0);
}
.reveal-delay-1 { transition-delay: 0.1s; }
.reveal-delay-2 { transition-delay: 0.2s; }
.reveal-delay-3 { transition-delay: 0.3s; }
/* Animação para o texto surgir após o número */
.text-reveal-initial {
  opacity: 0;
  transform: translateY(20px);
  transition: opacity 0.8s ease-out, transform 0.8s ease-out;
}

.text-reveal-visible {
  opacity: 1;
  transform: translateY(0);
}

/* O contêiner que segura as palavras. Usado para acionar a animação em todos os filhos. */
.stagger-container {}

/* Estilo de cada palavra individualmente */
.staggered-word {
  display: inline-block; /* Necessário para o transform funcionar corretamente */
  opacity: 0;
  transform: translateY(20px);
  transition: opacity 0.4s ease, transform 0.4s ease;
  margin-right: 0.3em; /* Adiciona um espaço entre as palavras */
}

/* Quando o contêiner fica visível, as palavras animam para este estado */
.stagger-container.visible .staggered-word {
  opacity: 1;
  transform: translateY(0);
}

@keyframes glow-fade {
    0% { text-shadow: 0 0 0px rgba(255, 255, 255, 0); }
    50% { text-shadow: 0 0 12px rgba(255, 255, 255, 0.8); }
    100% { text-shadow: 0 0 0px rgba(255, 255, 255, 0); }
}

/* Estilo para cada palavra ANTES da animação */
.staggered-word {
    display: inline-block;
    opacity: 0;
    filter: blur(4px);
    transition: opacity 0.6s ease-out, filter 0.6s ease-out;
}

/* Quando o container pai tem a classe 'visible', ativa a animação */
.stagger-container.visible .staggered-word {
    opacity: 1;
    filter: blur(0);
    animation: glow-fade 1.2s ease-in-out forwards;
}

/* Classes de overlay e destaque (opcionais, mas usadas no componente) */
.image-overlay {
    position: absolute;
    top: 0;
    bottom: 0;
    width: 100%;
    display: flex;
    align-items: center;
}
.image-overlay.left {
    background: linear-gradient(to right, rgba(0,0,0,0.85) 30%, rgba(0,0,0,0) 90%);
}
.image-overlay.right {
    background: linear-gradient(to left, rgba(0,0,0,0.85) 30%, rgba(0,0,0,0) 90%);
}

/* ------ */

/* --- Estilos do Splash Screen --- */
.splash-screen {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: #131313; /* Fundo escuro */
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 9999;
  transition: opacity 1s ease-in-out;
  opacity: 1;
}

/* Classe para o efeito de fade-out */
.splash-screen.fade-out {
  opacity: 0;
}


/* --- Lógica da Animação de Texto --- */

.animated-text {
  font-size: 2rem; /* 32px */
  font-weight: 100;
  color: #E5E7EB;
  max-width: 90%;
  padding: 5px 0;
}

@media (min-width: 768px) {
  .animated-text {
    font-size: 3rem; /* 48px */
  }
}

.word {
  display: inline-block;
  opacity: 0;
  filter: blur(6px);
  transition: opacity 0.5s ease-in-out, filter 0.5s ease-in-out, text-shadow 0.5s ease-in-out;
}

/* Adicione estes keyframes ao seu CSS */
@keyframes glow-pulse {
  0% {
    text-shadow: 0 0 0px rgba(219, 234, 254, 0);
  }
  50% {
    text-shadow: 0 0 12px rgba(219, 234, 254, 0.7);
  }
  100% {
    text-shadow: 0 0 0px rgba(219, 234, 254, 0);
  }
}

/* E atualize a regra .animated-text.animate .word */
.animated-text.animate .word {
  opacity: 1;
  filter: blur(0);
  /* Em vez de uma sombra estática, aplicamos a animação.
    'forwards' garante que o estado final (sem brilho) seja mantido.
  */
  animation: glow-pulse 1s ease-in-out forwards;
}
